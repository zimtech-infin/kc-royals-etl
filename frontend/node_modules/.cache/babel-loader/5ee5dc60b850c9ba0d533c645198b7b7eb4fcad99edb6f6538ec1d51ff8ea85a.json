{"ast":null,"code":"var _jsxFileName = \"/Users/kelvins-mac/Documents/www/kc-royals-etl/frontend/src/context/PlayerContext.js\",\n  _s = $RefreshSig$();\n/**\n * File: PlayerContext.js\n * Version: Pre-Production\n * Created by: K. Zimmerman\n * Project: kc_royals_backend\n * Description:\n * - Ensures React properly updates state when fetching players.\n */\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { fetchPlayers } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlayerContext = /*#__PURE__*/createContext();\nexport const PlayerProvider = ({\n  children\n}) => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  useEffect(() => {\n    fetchPlayers().then(data => {\n      console.log(\"Fetched players:\", data); // Debugging log\n      setPlayers([...data]); // Spreading ensures React detects state change\n    }).catch(error => console.error(\"Error fetching players:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      players\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerProvider, \"X/Tdqu5+Xz4mrEJLe3+u4Igo5rg=\");\n_c = PlayerProvider;\nvar _c;\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","fetchPlayers","jsxDEV","_jsxDEV","PlayerContext","PlayerProvider","children","_s","players","setPlayers","then","data","console","log","catch","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kelvins-mac/Documents/www/kc-royals-etl/frontend/src/context/PlayerContext.js"],"sourcesContent":["/**\n * File: PlayerContext.js\n * Version: Pre-Production\n * Created by: K. Zimmerman\n * Project: kc_royals_backend\n * Description:\n * - Ensures React properly updates state when fetching players.\n */\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { fetchPlayers } from \"../api/api\";\n\nexport const PlayerContext = createContext();\n\nexport const PlayerProvider = ({ children }) => {\n  const [players, setPlayers] = useState([]);\n\n  useEffect(() => {\n    fetchPlayers()\n      .then((data) => {\n        console.log(\"Fetched players:\", data); // Debugging log\n        setPlayers([...data]); // Spreading ensures React detects state change\n      })\n      .catch((error) => console.error(\"Error fetching players:\", error));\n  }, []);\n\n  return (\n    <PlayerContext.Provider value={{ players }}>\n      {children}\n    </PlayerContext.Provider>\n  );\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,YAAY,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,OAAO,MAAMC,aAAa,gBAAGN,aAAa,CAAC,CAAC;AAE5C,OAAO,MAAMO,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdC,YAAY,CAAC,CAAC,CACXS,IAAI,CAAEC,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC,CAAC,CAAC;MACvCF,UAAU,CAAC,CAAC,GAAGE,IAAI,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACC,aAAa,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET;IAAQ,CAAE;IAAAF,QAAA,EACxCA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACd,EAAA,CAjBWF,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}